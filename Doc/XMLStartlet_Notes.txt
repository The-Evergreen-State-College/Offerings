wget --no-check-certificate "https://adminweb.evergreen.edu/banner/public/offerings/export" --output-document=H:\adminweb_Offering_export.xml

# Validating XML file
xml val -e adminweb_Offering_export.xml

# XML Structure
## long form
xml.exe el adminweb_Offering_export.xml

## short form
xml.exe el -u adminweb_Offering_export.xml

offerings
offerings/offering
offerings/offering/faculties
offerings/offering/faculties/faculty
offerings/offering/oars_offerings
offerings/offering/oars_offerings/oars_offering
offerings/offering/short_title
offerings/offering/terms
offerings/offering/terms/term
offerings/offering/title

# XML Structure with attributes "@"
## long form
###	There's no short form of the command
xml.exe el -a adminweb_Offering_export.xml


offerings/offering
offerings/offering/@id
offerings/offering/@status
offerings/offering/@year
offerings/offering/@offering_type
offerings/offering/@liaison_area
offerings/offering/@curr_area
offerings/offering/@crns
offerings/offering/@time_category
offerings/offering/title
offerings/offering/short_title
offerings/offering/oars_offerings
offerings/offering/oars_offerings/oars_offering
offerings/offering/oars_offerings/oars_offering/@code
offerings/offering/faculties
offerings/offering/faculties/faculty
offerings/offering/faculties/faculty/@display_name
offerings/offering/faculties/faculty/@user_name
offerings/offering/faculties/faculty/@id
offerings/offering/faculties/faculty/@phone
offerings/offering/faculties/faculty/@location
offerings/offering/faculties/faculty/@email
offerings/offering/faculties/faculty/@coordinator
offerings/offering/faculties/faculty
offerings/offering/faculties/faculty/@display_name
offerings/offering/faculties/faculty/@user_name
offerings/offering/faculties/faculty/@id
offerings/offering/faculties/faculty/@phone
offerings/offering/faculties/faculty/@location
offerings/offering/faculties/faculty/@email
offerings/offering/faculties/faculty/@coordinator
offerings/offering/terms
offerings/offering/terms/term
offerings/offering/terms/term/@code
offerings/offering/terms/term/@season
offerings/offering/terms/term/@start_date
offerings/offering/terms/term/@end_date


# Get a count for the number of records
xml.exe sel -t -v "count(/offerings/offering/title)" adminweb_Offering_export.xml

## Count the total number of nodes in xml file(s)
xml sel -t -f -o " " -v "count(//node())" adminweb_Offering_export.xml

## Count for a specific element or attribute
xml sel -t -f -o " " -v "count(offerings/offering/faculties/faculty/@user_name)" adminweb_Offering_export.xml

# Show  XSLT format with "-C" switch
xml.exe sel -C -t -v "count(/offerings/offering/title)" adminweb_Offering_export.xml


Every -t option is mapped into XSLT template. Options after '-t' are mapped into XSLT elements:

*   \-v to <xsl:value-of>
    
*   \-c to <xsl:copy-of>
    
*   \-e to <xsl:element>
    
*   \-a to <xsl:attribute>
    
*   \-s to <xsl:sort>
    
*   \-m to <xsl:for-each>
    
*   \-i to <xsl:if>
    
*   and so on


# -c Returns the entire node
xml sel -t -c "offerings/offering[@id="26188"]" -n adminweb_Offering_export.xml

# Get a list of titles
xml.exe sel -t -v "offerings/offering/title" adminweb_Offering_export.xml

# or same results
xml.exe sel -t -m //offerings/offering -v title -n adminweb_Offering_export.xml


## Do titles as sorted
xml.exe sel -t -m //offerings/offering -s A:T:U title -v title -n adminweb_Offering_export.xml

## Get Offering ID's
xml.exe sel -t -m "//offerings/offering" -v @id -n adminweb_Offering_export.xml

## Get status
xml.exe sel -t -m "//offerings/offering" -v @status -n adminweb_Offering_export.xml

## Get year
xml.exe sel -t -m "//offerings/offering" -v @year -n adminweb_Offering_export.xml

## offering_type
xml.exe sel -t -m "//offerings/offering" -v @offering_type -n adminweb_Offering_export.xml

## liaison_area
xml.exe sel -t -m "//offerings/offering" -v @liaison_area -n adminweb_Offering_export.xml

## curr_area
xml.exe sel -t -m "//offerings/offering" -v @curr_area -n adminweb_Offering_export.xml

## Program Code
xml.exe sel -t -m "offerings/offering/oars_offerings/oars_offering" -v @code -n adminweb_Offering_export.xml

## Program Code using sort
xml.exe sel -t -m "offerings/offering/oars_offerings/oars_offering" -s A:T:U code -v @code -n adminweb_Offering_export.xml

## Multiple values as once with a ";"
xml.exe sel -T -t -m "offerings/offering" -v "concat(@id, ';' ,@status, ';', @year, ';', @offering_type, ';', @liaison_area, ';', @curr_area)"  -n adminweb_Offering_export.xml
### example
xml sel -T -t -m offerings/offering -s A:T:U "@id" -v "concat(@id, '|', @status, '|', @year, '|',  @offering_type, '|', @liaison_area, '|', @curr_area)" -n
 adminweb_Offering_export.xml


xml.exe sel -T -t -c "offerings/offering" -v "offerings/offering/title" 

xml.exe sel -T -t -c "offerings/offering" -m "offerings/offering" -v "concat(@id, ';' ,@status, ';', @year, ';', @offering_type, ';', @liaison_area, ';', @curr_area)" -m "offerings/offering/oars_offerings/oars_offering" -v @code -n adminweb_Offering_export.xml

## Trying to output two values from different elements at the same time
xml.exe sel -t -m //offerings/offering/oars_offerings/oars_offering -v @code -m //offerings/offering -v @id -n adminweb_Offering_export.xml | more


# Parsed file
xml sel -t -m "//offering" -v "concat(@id, ';' ,@status, ';', @year, ';', @offering_type, ';', @liaison_area, ';', @curr_area, title)" -o ";" -m oars_offerings/oars_offering -v @code -n adminweb_Offering_export.xml > adminweb_offerings_parsed.txt

xml sel -t -m offerings/offering/oars_offerings/oars_offering -v @code -o ";" -m "//offering" -v "concat(@id, ';' ,@status, ';', @year, ';', @offering_type, ';', @liaison_area, ';', @curr_area, ';', title)" -o ";" -m "faculties/faculty" -v "@display_name" -n adminweb_Offering_export.xml
